name: Github action demo front end deployment

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  run-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Go to backend directory
        run: cd ./apps/be

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run test
        run: yarn test

  build-and-deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          cache: 'yarn'

      - name: Go to backend directory
        run: cd ./apps/be

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Building...
        run: yarn build

      - name: SSH initialization
        env: 
          EC2_INSTANCE_IP_V4: ${{ secrets.EC2_INSTANCE_IP_V4 }}
          EC2_INSTANCE_PRIVATE_KEY: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }} 
        run: |
          eval $(ssh-agent -s)
          ssh-keyscan -H "${EC2_INSTANCE_IP_V4}" >> ~/.ssh/known_hosts
          ssh-add <(echo "${EC2_INSTANCE_PRIVATE_KEY}")
      
      - name: Copy artifact to server 
        env:
          EC2_INSTANCE_IP_V4: ${{ secrets.EC2_INSTANCE_IP_V4 }}
          EC2_INSTANCE_USER: ${{ secrets.EC2_INSTANCE_USER }}
          EC2_INSTANCE_PRIVATE_KEY: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }}
          EC2_INSTANCE_PROJECT_PATH: ${{ secrets.EC2_INSTANCE_PROJECT_PATH }}
        run: |
          rsync -avzP ./dist package.json yarn.lock deploy.sh "${EC2_INSTANCE_USER}"@"${EC2_INSTANCE_IP_V4}":"${EC2_INSTANCE_PROJECT_PATH}" --delete
          ssh "${EC2_INSTANCE_USER}"@"${EC2_INSTANCE_IP_V4}" "source ~/.nvm/nvm.sh && cd ${EC2_INSTANCE_PROJECT_PATH} && pm2 start"



      
